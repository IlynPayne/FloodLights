
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
sourceCompatibility = 1.8
targetCompatibility = 1.8


/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
if (new File("curseKey.properties").exists()) {
    // define the properties file
    ext.configFile = file "curseKey.properties"

    configFile.withReader {
        // read config.  it shall from now on be referenced as simply config or as project.config
        def prop = new Properties()
        prop.load(it)
        project.ext.curse = new ConfigSlurper().parse prop
    }
}

repositories {
    maven {
        name = "progwml6"
        url = "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "IGW"
        url = "http://maven.k-4u.nl/"
    }
    maven { // The repo from which to get waila
        name = "Mobius Repo"
        url = "http://tehnut.info/maven"
    }
    maven { // the repo from which to get EnderIO and tterags mods
        name = 'tterrag'
        url = "http://maven.tterrag.com/"
    }
    maven {
        name = "OC repo"
        url = "http://maven.cil.li/"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    if (new File("curseKey.properties").exists()) {
        //maven {
        //    name = "CurseForge"
        //    url = "https://minecraft.curseforge.com/api/${project.curse.api_key}"
        //}
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'


// define the properties file
ext.configFile = file "project.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod_version}"
if (hasProperty('appendBuildNumber')) {
    version = version + "-" + appendBuildNumber.toString()
} else {
    version = version + "-0"
}

group = "${config.group_id}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${config.mod_id}-${config.minecraft_version}"

minecraft {
    version = "${config.forge_version}"
    if (file('../run_1.9.4').exists()) {
        runDir = "../run_1.9.4"
    } else {
        runDir = "run"
    }
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20180612"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replace '@VERSION@', project.version
    replaceIn 'Reference.java'
}

processResources{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

build.dependsOn sourceJar, deobfJar

dependencies {
    compile "com.google.code.findbugs:annotations:3.0.1"
    compile "com.google.code.gson:gson:2.8.5"
    compile "commons-io:commons-io:2.6"
    compile "org.lwjgl.lwjgl:lwjgl:2.9.3"

    compile "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
    compile "igwmod:IGW-Mod-${config.minecraft_version}:${config.igwmod_version}:userdev"
    compile "net.industrial-craft:industrialcraft-2:${config.ic2_version}"
    // 1.12.2 builds aren't available on Maven (https://github.com/SleepyTrousers/EnderIO/issues/4586)
    //compile "com.enderio:EnderIO:${config.minecraft_version}-${config.enderio_version}"
    // Loading local version from disk instead
    compile files("../EnderIO-${config.minecraft_version}-${config.enderio_version}.jar")
    compile "com.enderio.core:EnderCore:${config.minecraft_version}-${config.endercore_version}"

    compile "mcp.mobius.waila:Hwyla:${config.hwyla_version}"

    if (new File("curseKey.properties").exists()) {

    }
}

minecraft {
    useDepAts = true
}

